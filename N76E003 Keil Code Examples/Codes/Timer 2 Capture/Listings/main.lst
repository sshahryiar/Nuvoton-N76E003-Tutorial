C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 14:55:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include;..\..\My_Libraries\
                    -3 Wire LCD) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          #include "LCD_3_Wire.h"
   7          
   8          
   9          #define HIRC    0
  10          #define LIRC    1
  11          #define ECLK    2
  12          
  13          #define timer_clock_speed  8000000.0
  14          
  15          
  16          unsigned long overflow = 0;
  17          unsigned long pulse_time = 0; 
  18          unsigned long start_time = 0; 
  19          unsigned long end_time = 0;
  20          
  21          
  22          void setup(void);
  23          void set_clock_source(unsigned char clock_source);
  24          void disable_clock_source(unsigned char clock_source);
  25          void set_clock_division_factor(unsigned char value);
  26          void setup_GPIOs(void);
  27          void setup_Timer_1(void);
  28          void setup_Timer_2(void);
  29          void setup_capture(void);
  30          void set_Timer_1(unsigned int value);
  31          void lcd_print(unsigned char x_pos, unsigned char y_pos, unsigned long value);
  32          
  33          
  34          
  35          void Timer_1_ISR(void)     
  36          interrupt 3
  37          {  
  38   1        set_Timer_1(0);
  39   1      }
  40          
  41          
  42          void Timer_2_ISR(void)     
  43          interrupt 5
  44          {  
  45   1        clr_TF2;
  46   1        overflow++;
  47   1      }
  48          
  49          
  50          void Input_Capture_ISR(void)     
  51          interrupt 12
  52          {
  53   1        if((CAPCON0 & SET_BIT0) != 0)
  54   1        {
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 14:55:45 PAGE 2   

  55   2          clr_CAPF0;    
  56   2          end_time = C0H; 
  57   2          end_time <<= 8;
  58   2          end_time |= C0L;
  59   2          pulse_time = ((overflow << 16) - start_time + end_time);
  60   2          start_time = end_time; 
  61   2          overflow = 0;
  62   2        }
  63   1      }
  64          
  65          
  66          void main(void)
  67          {
  68   1        register float f = 0.0;
  69   1        
  70   1        setup();
  71   1        
  72   1        LCD_init();
  73   1        LCD_clear_home(); 
  74   1        LCD_goto(1, 0); 
  75   1        LCD_putstr("Nu Freq. Meter");
  76   1        LCD_goto(0, 1); 
  77   1        LCD_putstr("Freq./Hz:");
  78   1      
  79   1        while(1)
  80   1        {
  81   2          f = (timer_clock_speed / ((float)pulse_time));
  82   2          lcd_print(11, 1, ((unsigned long)f));
  83   2          Timer0_Delay1ms(100);
  84   2        };
  85   1      }
  86          
  87          
  88          void setup(void)
  89          {
  90   1        disable_clock_source(ECLK);    
  91   1        set_clock_source(HIRC); 
  92   1        set_clock_division_factor(1); 
  93   1        setup_GPIOs();
  94   1        setup_capture();
  95   1        setup_Timer_1();
  96   1        setup_Timer_2();
  97   1        set_EA;                        
  98   1      }
  99          
 100          
 101          void set_clock_source(unsigned char clock_source)
 102          {
 103   1        switch(clock_source)
 104   1        {
 105   2          case LIRC:
 106   2          {
 107   3            set_OSC1;                     
 108   3            clr_OSC0;  
 109   3            
 110   3            break;
 111   3          }
 112   2          
 113   2          case ECLK:
 114   2          {
 115   3            set_EXTEN1;
 116   3            set_EXTEN0;
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 14:55:45 PAGE 3   

 117   3            
 118   3            while((CKSWT & SET_BIT3) == 0); 
 119   3            
 120   3            clr_OSC1;                     
 121   3            set_OSC0; 
 122   3            
 123   3            break;
 124   3          }
 125   2          
 126   2          default:
 127   2          {
 128   3            set_HIRCEN;         
 129   3            
 130   3            while((CKSWT & SET_BIT5) == 0);   
 131   3            
 132   3            clr_OSC1;                       
 133   3            clr_OSC0;
 134   3            
 135   3            break;
 136   3          }
 137   2        }
 138   1      
 139   1        while((CKEN & SET_BIT0) == 1);  
 140   1      }
 141          
 142          
 143          void disable_clock_source(unsigned char clock_source)
 144          {
 145   1        switch(clock_source)
 146   1        {
 147   2          case HIRC:
 148   2          {
 149   3             clr_HIRCEN;
 150   3             break;
 151   3          }
 152   2          
 153   2          default:
 154   2          {
 155   3             clr_EXTEN1;
 156   3             clr_EXTEN0;
 157   3             break;
 158   3          }
 159   2        }
 160   1      }
 161          
 162          
 163          void set_clock_division_factor(unsigned char value)
 164          {
 165   1        CKDIV = value;
 166   1      }
 167          
 168          
 169          void setup_GPIOs(void)
 170          {
 171   1        P00_PushPull_Mode;
 172   1        P12_Input_Mode;
 173   1      }
 174          
 175          
 176          void setup_Timer_1(void)
 177          {
 178   1        set_T1M;                
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 14:55:45 PAGE 4   

 179   1        TIMER1_MODE1_ENABLE;           
 180   1        set_Timer_1(0);                
 181   1        P2S |= SET_BIT3;              
 182   1        set_TR1;                     
 183   1        set_ET1;                      
 184   1      }
 185          
 186          
 187          void setup_Timer_2(void)
 188          {
 189   1        T2CON &= ~SET_BIT0;         
 190   1        T2MOD = 0x00;                
 191   1        set_TR2;                      
 192   1        set_ET2;                       
 193   1      }
 194          
 195          
 196          void setup_capture(void)
 197          {
 198   1        IC0_P12_CAP0_FallingEdge_Capture;
 199   1        set_ECAP;                
 200   1      }
 201          
 202            
 203          void set_Timer_1(unsigned int value)
 204          {
 205   1        TH1 = ((value && 0xFF00) >> 8);
 206   1        TL1 = (value & 0x00FF);
 207   1      }
 208          
 209          
 210          void lcd_print(unsigned char x_pos, unsigned char y_pos, unsigned long value)
 211          {  
 212   1        LCD_goto(x_pos, y_pos);
 213   1        LCD_putchar((value / 10000) + 0x30);
 214   1        LCD_goto((x_pos + 1), y_pos);
 215   1        LCD_putchar(((value % 10000) / 1000) + 0x30);  
 216   1        LCD_goto((x_pos + 2), y_pos);
 217   1        LCD_putchar(((value % 1000) / 100) + 0x30);
 218   1        LCD_goto((x_pos + 3), y_pos);
 219   1        LCD_putchar(((value % 100) / 10) + 0x30);
 220   1        LCD_goto((x_pos + 4), y_pos);
 221   1        LCD_putchar((value % 10) + 0x30);
 222   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    945    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
