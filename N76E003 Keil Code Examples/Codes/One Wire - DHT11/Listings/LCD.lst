C51 COMPILER V9.56.0.0   LCD                                                               07/25/2018 15:54:38 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\My_Libraries\LCD (Software Delay)\LCD.c OPTIMIZE(8,SPEED) BROWSE I
                    -NCDIR(..\..\Include;..\..\My_Libraries\2 Wire LCD  (Software Delay);..\..\My_Libraries\DHT11;..\..\My_Libraries\Software
                    - Delay) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\LCD.lst) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          #include "soft_delay.h"
   7          #include "lcd.h"
   8          
   9          
  10          void LCD_init(void)
  11          {
  12   1        delay_ms(10);
  13   1      
  14   1        LCD_GPIO_init();
  15   1        
  16   1        delay_ms(100);
  17   1      
  18   1        toggle_EN_pin();
  19   1      
  20   1        LCD_RS_LOW;
  21   1      
  22   1        LCD_DB7_LOW;
  23   1        LCD_DB6_LOW;
  24   1        LCD_DB5_HIGH;
  25   1        LCD_DB4_HIGH;
  26   1      
  27   1        toggle_EN_pin();
  28   1      
  29   1        LCD_DB7_LOW;
  30   1        LCD_DB6_LOW;
  31   1        LCD_DB5_HIGH;
  32   1        LCD_DB4_HIGH;
  33   1      
  34   1        toggle_EN_pin();
  35   1      
  36   1        LCD_DB7_LOW;
  37   1        LCD_DB6_LOW;
  38   1        LCD_DB5_HIGH;
  39   1        LCD_DB4_HIGH;
  40   1      
  41   1        toggle_EN_pin();
  42   1      
  43   1        LCD_DB7_LOW;
  44   1        LCD_DB6_LOW;
  45   1        LCD_DB5_HIGH;
  46   1        LCD_DB4_LOW;
  47   1      
  48   1        toggle_EN_pin();
  49   1      
  50   1        LCD_send((_4_pin_interface | _2_row_display | _5x7_dots), CMD);
  51   1        LCD_send((display_on | cursor_off | blink_off), CMD);
  52   1        LCD_send(clear_display, CMD);
  53   1        LCD_send((cursor_direction_inc | display_no_shift), CMD);
C51 COMPILER V9.56.0.0   LCD                                                               07/25/2018 15:54:38 PAGE 2   

  54   1      }
  55          
  56          
  57          void LCD_send(unsigned char value, unsigned char mode)
  58          {
  59   1        switch(mode)
  60   1        {
  61   2          case DAT:
  62   2          {
  63   3            LCD_RS_HIGH;
  64   3            break;
  65   3          }
  66   2          case CMD:
  67   2          {
  68   3            LCD_RS_LOW;
  69   3            break;
  70   3          }
  71   2        }
  72   1      
  73   1        LCD_4bit_send(value);
  74   1      }
  75          
  76          
  77          void LCD_4bit_send(unsigned char lcd_data)
  78          {
  79   1        unsigned char temp = 0;
  80   1        
  81   1        temp = ((lcd_data & 0x80) >> 7);
  82   1        
  83   1        switch(temp)
  84   1        {
  85   2          case 1:
  86   2          { 
  87   3            LCD_DB7_HIGH;
  88   3            break;
  89   3          }
  90   2          default:
  91   2          {
  92   3            LCD_DB7_LOW;
  93   3            break;
  94   3          }
  95   2        }
  96   1        
  97   1        temp = ((lcd_data & 0x40) >> 6);
  98   1        
  99   1        switch(temp)
 100   1        {
 101   2          case 1:
 102   2          { 
 103   3            LCD_DB6_HIGH;
 104   3            break;
 105   3          }
 106   2          default:
 107   2          {
 108   3            LCD_DB6_LOW;
 109   3            break;
 110   3          }
 111   2        }
 112   1        
 113   1        temp = ((lcd_data & 0x20) >> 5);
 114   1        
 115   1        switch(temp)
C51 COMPILER V9.56.0.0   LCD                                                               07/25/2018 15:54:38 PAGE 3   

 116   1        {
 117   2          case 1:
 118   2          { 
 119   3            LCD_DB5_HIGH;
 120   3            break;
 121   3          }
 122   2          default:
 123   2          {
 124   3            LCD_DB5_LOW;
 125   3            break;
 126   3          }
 127   2        }
 128   1        
 129   1        temp = ((lcd_data & 0x10) >> 4);
 130   1        
 131   1        switch(temp)
 132   1        {
 133   2          case 1:
 134   2          { 
 135   3            LCD_DB4_HIGH;
 136   3            break;
 137   3          }
 138   2          default:
 139   2          {
 140   3            LCD_DB4_LOW;
 141   3            break;
 142   3          }
 143   2        }
 144   1      
 145   1        toggle_EN_pin();
 146   1      
 147   1        temp = ((lcd_data & 0x08) >> 3);
 148   1        
 149   1        switch(temp)
 150   1        {
 151   2          case 1:
 152   2          { 
 153   3            LCD_DB7_HIGH;
 154   3            break;
 155   3          }
 156   2          default:
 157   2          {
 158   3            LCD_DB7_LOW;
 159   3            break;
 160   3          }
 161   2        }
 162   1        
 163   1        temp = ((lcd_data & 0x04) >> 2);
 164   1        
 165   1        switch(temp)
 166   1        {
 167   2          case 1:
 168   2          { 
 169   3            LCD_DB6_HIGH;
 170   3            break;
 171   3          }
 172   2          default:
 173   2          {
 174   3            LCD_DB6_LOW;
 175   3            break;
 176   3          }
 177   2        }
C51 COMPILER V9.56.0.0   LCD                                                               07/25/2018 15:54:38 PAGE 4   

 178   1        
 179   1        temp = ((lcd_data & 0x02) >> 1);
 180   1        
 181   1        switch(temp)
 182   1        {
 183   2          case 1:
 184   2          { 
 185   3            LCD_DB5_HIGH;
 186   3            break;
 187   3          }
 188   2          default:
 189   2          {
 190   3            LCD_DB5_LOW;
 191   3            break;
 192   3          }
 193   2        }
 194   1        
 195   1        temp = ((lcd_data & 0x01));
 196   1        
 197   1        switch(temp)
 198   1        {
 199   2          case 1:
 200   2          { 
 201   3            LCD_DB4_HIGH;
 202   3            break;
 203   3          }
 204   2          default:
 205   2          {
 206   3            LCD_DB4_LOW;
 207   3            break;
 208   3          }
 209   2        }
 210   1      
 211   1        toggle_EN_pin();
 212   1      }
 213          
 214          
 215          void LCD_putstr(char *lcd_string)
 216          {
 217   1        do
 218   1        {
 219   2          LCD_send(*lcd_string++, DAT);
 220   2        }while(*lcd_string != '\0');
 221   1      }
 222          
 223          
 224          void LCD_putchar(char char_data)
 225          {
 226   1        LCD_send(char_data, DAT);
 227   1      }
 228          
 229          
 230          void LCD_clear_home(void)
 231          {
 232   1        LCD_send(clear_display, CMD);
 233   1        LCD_send(goto_home, CMD);
 234   1      }
 235          
 236          
 237          void LCD_goto(unsigned char x_pos, unsigned char y_pos)
 238          {
 239   1        if(y_pos == 0)
C51 COMPILER V9.56.0.0   LCD                                                               07/25/2018 15:54:38 PAGE 5   

 240   1        {
 241   2          LCD_send((0x80 | x_pos), CMD);
 242   2        }
 243   1        else
 244   1        {
 245   2          LCD_send((0x80 | 0x40 | x_pos), CMD);
 246   2        }
 247   1      }
 248          
 249          
 250          void toggle_EN_pin(void)
 251          {
 252   1        LCD_EN_HIGH;
 253   1        delay_ms(4);
 254   1        LCD_EN_LOW;
 255   1        delay_ms(4);
 256   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    369    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
