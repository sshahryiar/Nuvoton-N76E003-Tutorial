C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          
   7          
   8          #define HIRC                        0
   9          #define LIRC                        1
  10          #define ECLK                        2
  11          
  12          #define GATE_HIGH                   set_P15
  13          #define GATE_LOW                    clr_P15
  14          
  15          #define CLK_HIGH                    set_P16
  16          #define CLK_LOW                     clr_P16
  17          
  18          #define A_HIGH                      set_P00
  19          #define A_LOW                       clr_P00
  20          
  21          #define B_HIGH                      set_P01
  22          #define B_LOW                       clr_P01
  23          
  24          #define C_HIGH                      set_P02
  25          #define C_LOW                       clr_P02
  26          
  27          #define D_HIGH                      set_P03
  28          #define D_LOW                       clr_P03
  29          
  30          #define SW                          P17
  31          
  32          #define top_seg                     4
  33          #define bot_seg                     0
  34          
  35          #define HIGH                        1
  36          #define LOW                         0
  37          
  38          
  39          const unsigned char num[0x0A] = {0xED, 0x21, 0x8F, 0xAB, 0x63, 0xEA, 0xEE, 0xA1, 0xEF, 0xEB};
  40          unsigned char data_values[0x09] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  41          
  42          
  43          unsigned char SW_in = 0;
  44          unsigned char n = 0;
  45          
  46          
  47          void setup(void);
  48          void setup_GPIOs(void);
  49          void setup_Timer_3(void);
  50          void set_Timer_3(unsigned int value);
  51          unsigned int get_Timer_3(void);
  52          void write_74HC164(register unsigned char value);
  53          void write_74HC145(register unsigned char channel);
  54          void show_LEDs(unsigned char LED1_state, unsigned char LED2_state, unsigned char LED3_state, unsigned char
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 2   

             - LED4_state);
  55          void show_numbers(signed int value, unsigned char pos);
  56          
  57          
  58          void Timer3_ISR(void)
  59          interrupt 16
  60          {
  61   1        write_74HC164(data_values[n]);
  62   1        write_74HC145(n);
  63   1      
  64   1        n++;
  65   1        if(n > 9)
  66   1        {
  67   2          n = 0;
  68   2        }
  69   1        
  70   1        clr_TF3;
  71   1      }
  72          
  73          
  74          void main (void)
  75          {
  76   1        
  77   1        unsigned int i = 0;
  78   1        unsigned int j = 9999;
  79   1           
  80   1        setup();
  81   1        
  82   1        while(1)
  83   1        {
  84   2          switch(SW_in)
  85   2          {
  86   3           case 1:
  87   3           {
  88   4             show_LEDs(1, 0, 0, 0);
  89   4             break;
  90   4           }
  91   3           case 2:
  92   3           {
  93   4             show_LEDs(0, 1, 0, 0);
  94   4             break;
  95   4           }
  96   3           case 3:
  97   3           {
  98   4             show_LEDs(0, 0, 1, 0);
  99   4             break;
 100   4           }
 101   3           case 4:
 102   3           {
 103   4             show_LEDs(0, 0, 0, 1);
 104   4             break;
 105   4           }
 106   3          }
 107   2      
 108   2          SW_in = 0x00;
 109   2      
 110   2          i++;
 111   2          j--;
 112   2      
 113   2          if(i > 9999)
 114   2          {
 115   3            i = 0;
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 3   

 116   3            j = 9999;
 117   3          }
 118   2      
 119   2          show_numbers(i, bot_seg);
 120   2          show_numbers(j, top_seg);
 121   2      
 122   2          Timer1_Delay10ms(40);
 123   2          show_LEDs(0, 0, 0, 0);
 124   2        };
 125   1      }
 126          
 127          
 128          void setup(void)
 129          {
 130   1        setup_GPIOs();
 131   1        setup_Timer_3();
 132   1      }
 133          
 134          
 135          void setup_GPIOs(void)
 136          {
 137   1        P00_PushPull_Mode;
 138   1        P01_PushPull_Mode;
 139   1        P02_PushPull_Mode;
 140   1        P03_PushPull_Mode;
 141   1        P15_PushPull_Mode;
 142   1        P16_PushPull_Mode;
 143   1        P17_Input_Mode;
 144   1      }
 145          
 146          
 147          void setup_Timer_3(void)
 148          { 
 149   1        set_Timer_3(0xF9C0);
 150   1        set_ET3;                                  
 151   1        set_EA;                                    
 152   1        set_TR3;    
 153   1      }
 154          
 155          
 156          void set_Timer_3(unsigned int value)
 157          {
 158   1        RL3 = (value & 0x00FF);  
 159   1        RH3 = ((value && 0xFF00) >> 8);
 160   1      }
 161          
 162          
 163          unsigned int get_Timer_3(void)
 164          {
 165   1        unsigned int value = 0x0000;
 166   1        
 167   1        value = RH3;
 168   1        value <<= 8;
 169   1        value |= RL3;
 170   1      
 171   1        return value;   
 172   1      }
 173          
 174          
 175          void write_74HC164(register unsigned char value)
 176          {
 177   1        register unsigned char s = 0x08;
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 4   

 178   1      
 179   1        while(s > 0)
 180   1        {
 181   2          if((value & 0x80) != 0x00)
 182   2          {
 183   3              GATE_HIGH;
 184   3          }
 185   2          else
 186   2          {
 187   3              GATE_LOW;
 188   3          }
 189   2      
 190   2          CLK_HIGH;
 191   2          CLK_LOW;
 192   2      
 193   2          value <<= 1;
 194   2          s--;
 195   2        };
 196   1      }
 197          
 198          
 199          void write_74HC145(register unsigned char channel)
 200          {
 201   1        P0 = 0x00;    
 202   1         
 203   1        switch(channel)
 204   1        {
 205   2          case 0:
 206   2          {
 207   3            nop;
 208   3          
 209   3            if(SW == LOW)
 210   3            {
 211   4              SW_in = 1;
 212   4            }
 213   3            break;
 214   3        }
 215   2      
 216   2          case 1:
 217   2          {
 218   3            P0 = 0x01;
 219   3            break;
 220   3          }
 221   2      
 222   2          case 2:
 223   2          {
 224   3            P0 = 0x02;
 225   3            break;
 226   3          }
 227   2      
 228   2          case 3:
 229   2          {
 230   3            P0 = 0x03;
 231   3            break;
 232   3          }
 233   2      
 234   2          case 4:
 235   2          {
 236   3            P0 = 0x04;
 237   3            break;
 238   3          }
 239   2      
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 5   

 240   2          case 5:
 241   2          {
 242   3            P0 = 0x05;
 243   3            break;
 244   3          }
 245   2      
 246   2          case 6:
 247   2          {
 248   3            P0 = 0x06;
 249   3            break;
 250   3          }
 251   2      
 252   2          case 7:
 253   2          {
 254   3            P0 = 0x07;
 255   3            nop;
 256   3            
 257   3            if(SW == LOW)
 258   3            {
 259   4              SW_in = 2;
 260   4            }
 261   3            break;
 262   3          }
 263   2      
 264   2          case 8:
 265   2          {
 266   3            P0 = 0x08;
 267   3            nop;
 268   3            
 269   3            if(SW == LOW)
 270   3            {
 271   4              SW_in = 3;
 272   4            }
 273   3            break;
 274   3          }
 275   2      
 276   2          case 9:
 277   2          {
 278   3            P0 = 0x09;
 279   3            nop;
 280   3            
 281   3            if(SW == LOW)
 282   3            {
 283   4              SW_in = 4;
 284   4            }
 285   3            break;
 286   3          }
 287   2        }
 288   1      }
 289          
 290          
 291          void show_LEDs(unsigned char LED1_state, unsigned char LED2_state, unsigned char LED3_state, unsigned char
             - LED4_state)
 292          {
 293   1        switch(LED1_state)
 294   1        {
 295   2          case HIGH:
 296   2          {
 297   3             data_values[8] |= 0x80;
 298   3             break;
 299   3          }
 300   2          case LOW:
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 6   

 301   2          {
 302   3             data_values[8] &= 0x7F;
 303   3             break;
 304   3          }
 305   2        }
 306   1      
 307   1        switch(LED2_state)
 308   1        {
 309   2          case HIGH:
 310   2          {
 311   3             data_values[8] |= 0x40;
 312   3             break;
 313   3          }
 314   2          case LOW:
 315   2          {
 316   3             data_values[8] &= 0xBF;
 317   3             break;
 318   3          }
 319   2        }
 320   1      
 321   1        switch(LED3_state)
 322   1        {
 323   2          case HIGH:
 324   2          {
 325   3             data_values[8] |= 0x08;
 326   3             break;
 327   3          }
 328   2          case LOW:
 329   2          {
 330   3             data_values[8] &= 0xF7;
 331   3             break;
 332   3          }
 333   2        }
 334   1      
 335   1        switch(LED4_state)
 336   1        {
 337   2          case HIGH:
 338   2          {
 339   3             data_values[8] |= 0x02;
 340   3             break;
 341   3          }
 342   2          case LOW:
 343   2          {
 344   3             data_values[8] &= 0xFD;
 345   3             break;
 346   3          }
 347   2        }
 348   1      }
 349          
 350          
 351          void show_numbers(signed int value, unsigned char pos)
 352          {
 353   1        register unsigned char ch = 0x00;
 354   1      
 355   1        if((value >= 0) && (value <= 9))
 356   1        {
 357   2          ch = (value % 10);
 358   2          data_values[(0 + pos)] = num[ch];
 359   2          data_values[(1 + pos)] = 0x00;
 360   2          data_values[(2 + pos)] = 0x00;
 361   2          data_values[(3 + pos)] = 0x00;
 362   2        }
C51 COMPILER V9.56.0.0   MAIN                                                              07/25/2018 15:13:02 PAGE 7   

 363   1        else if((value > 9) && (value <= 99))
 364   1        {
 365   2          ch = (value % 10);
 366   2          data_values[(0 + pos)] = num[ch];
 367   2          ch = ((value / 10) % 10);
 368   2          data_values[(1 + pos)] = num[ch];
 369   2          data_values[(2 + pos)] = 0x00;
 370   2          data_values[(3 + pos)] = 0x00;
 371   2        }
 372   1        else if((value > 99) && (value <= 999))
 373   1        {
 374   2          ch = (value % 10);
 375   2          data_values[(0 + pos)] = num[ch];
 376   2          ch = ((value / 10) % 10);
 377   2          data_values[(1 + pos)] = num[ch];
 378   2          ch = ((value / 100) % 10);
 379   2          data_values[(2 + pos)] = num[ch];
 380   2          data_values[(3 + pos)] = 0x00;
 381   2        }
 382   1        else if((value > 999) && (value <= 9999))
 383   1        {
 384   2          ch = (value % 10);
 385   2          data_values[(0 + pos)] = num[ch];
 386   2          ch = ((value / 10) % 10);
 387   2          data_values[(1 + pos)] = num[ch];
 388   2          ch = ((value / 100) % 10);
 389   2          data_values[(2 + pos)] = num[ch];
 390   2          ch = (value / 1000);
 391   2          data_values[(3 + pos)] = num[ch];
 392   2        }
 393   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    924    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
