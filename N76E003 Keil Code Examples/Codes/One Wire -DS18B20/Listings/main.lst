C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2018 12:36:35 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Include;..\..\My_Libraries\
                    -Software Delay;..\..\My_Libraries\DS18B20;..\..\My_Libraries\3 Wire LCD (Software Delay)) DEFINE(FOSC_160000) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          #include "soft_delay.h"
   7          #include "DS18B20.h"
   8          #include "LCD_3_Wire.h"
   9          
  10          
  11          const unsigned char symbol[8] =
  12          {
  13             0x00, 0x06, 0x09, 0x09, 0x06, 0x00, 0x00, 0x00
  14          };
  15          
  16          
  17          void lcd_symbol(void);
  18          void print_C(unsigned char x_pos, unsigned char y_pos, signed int value);
  19          void print_I(unsigned char x_pos, unsigned char y_pos, signed long value);
  20          void print_D(unsigned char x_pos, unsigned char y_pos, signed int value, unsigned char points);
  21          void print_F(unsigned char x_pos, unsigned char y_pos, float value, unsigned char points);
  22          
  23          
  24          void main(void)
  25          {
  26   1        float t = 0.0;
  27   1        
  28   1        DS18B20_init();
  29   1        LCD_init();
  30   1        lcd_symbol();
  31   1      
  32   1        LCD_goto(0, 0);
  33   1        LCD_putstr("N76E003 DS18B20");
  34   1      
  35   1        LCD_goto(0, 1);
  36   1        LCD_putstr("T/ C");
  37   1        LCD_goto(2, 1);
  38   1        LCD_send(0, DAT);
  39   1      
  40   1        while(1)
  41   1        {
  42   2            t = DS18B20_get_temperature();
  43   2            print_F(9, 1, t, 3);
  44   2            delay_ms(100);
  45   2        };
  46   1      }
  47          
  48          
  49          void lcd_symbol(void)
  50          {
  51   1          unsigned char s = 0;
  52   1      
  53   1         LCD_send(0x40, CMD);
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2018 12:36:35 PAGE 2   

  54   1      
  55   1         for(s = 0; s < 8; s++)
  56   1         {
  57   2              LCD_send(symbol[s], DAT);
  58   2         }
  59   1      
  60   1         LCD_send(0x80, CMD);
  61   1      }
  62          
  63          
  64          void print_C(unsigned char x_pos, unsigned char y_pos, signed int value)
  65          {
  66   1           char ch[5] = {0x20, 0x20, 0x20, 0x20, '\0'};
  67   1      
  68   1           if(value < 0x00)
  69   1           {
  70   2              ch[0] = 0x2D;
  71   2              value = -value;
  72   2           }
  73   1           else
  74   1           {
  75   2              ch[0] = 0x20;
  76   2           }
  77   1      
  78   1           if((value > 99) && (value <= 999))
  79   1           {
  80   2               ch[1] = ((value / 100) + 0x30);
  81   2               ch[2] = (((value % 100) / 10) + 0x30);
  82   2               ch[3] = ((value % 10) + 0x30);
  83   2           }
  84   1           else if((value > 9) && (value <= 99))
  85   1           {
  86   2               ch[1] = (((value % 100) / 10) + 0x30);
  87   2               ch[2] = ((value % 10) + 0x30);
  88   2               ch[3] = 0x20;
  89   2           }
  90   1           else if((value >= 0) && (value <= 9))
  91   1           {
  92   2               ch[1] = ((value % 10) + 0x30);
  93   2               ch[2] = 0x20;
  94   2               ch[3] = 0x20;
  95   2           }
  96   1      
  97   1           LCD_goto(x_pos, y_pos);
  98   1           LCD_putstr(ch);
  99   1      }
 100          
 101          
 102          void print_I(unsigned char x_pos, unsigned char y_pos, signed long value)
 103          {
 104   1          char ch[7] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20, '\0'};
 105   1      
 106   1          if(value < 0)
 107   1          {
 108   2              ch[0] = 0x2D;
 109   2              value = -value;
 110   2          }
 111   1          else
 112   1          {
 113   2              ch[0] = 0x20;
 114   2          }
 115   1      
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2018 12:36:35 PAGE 3   

 116   1          if(value > 9999)
 117   1          {
 118   2              ch[1] = ((value / 10000) + 0x30);
 119   2              ch[2] = (((value % 10000)/ 1000) + 0x30);
 120   2              ch[3] = (((value % 1000) / 100) + 0x30);
 121   2              ch[4] = (((value % 100) / 10) + 0x30);
 122   2              ch[5] = ((value % 10) + 0x30);
 123   2          }
 124   1      
 125   1          else if((value > 999) && (value <= 9999))
 126   1          {
 127   2              ch[1] = (((value % 10000)/ 1000) + 0x30);
 128   2              ch[2] = (((value % 1000) / 100) + 0x30);
 129   2              ch[3] = (((value % 100) / 10) + 0x30);
 130   2              ch[4] = ((value % 10) + 0x30);
 131   2              ch[5] = 0x20;
 132   2          }
 133   1          else if((value > 99) && (value <= 999))
 134   1          {
 135   2              ch[1] = (((value % 1000) / 100) + 0x30);
 136   2              ch[2] = (((value % 100) / 10) + 0x30);
 137   2              ch[3] = ((value % 10) + 0x30);
 138   2              ch[4] = 0x20;
 139   2              ch[5] = 0x20;
 140   2          }
 141   1          else if((value > 9) && (value <= 99))
 142   1          {
 143   2              ch[1] = (((value % 100) / 10) + 0x30);
 144   2              ch[2] = ((value % 10) + 0x30);
 145   2              ch[3] = 0x20;
 146   2              ch[4] = 0x20;
 147   2              ch[5] = 0x20;
 148   2          }
 149   1          else
 150   1          {
 151   2              ch[1] = ((value % 10) + 0x30);
 152   2              ch[2] = 0x20;
 153   2              ch[3] = 0x20;
 154   2              ch[4] = 0x20;
 155   2              ch[5] = 0x20;
 156   2          }
 157   1      
 158   1          LCD_goto(x_pos, y_pos);
 159   1          LCD_putstr(ch);
 160   1      }
 161          
 162          
 163          void print_D(unsigned char x_pos, unsigned char y_pos, signed int value, unsigned char points)
 164          {
 165   1          char ch[5] = {0x2E, 0x20, 0x20, '\0'};
 166   1      
 167   1          ch[1] = ((value / 100) + 0x30);
 168   1      
 169   1          if(points > 1)
 170   1          {
 171   2              ch[2] = (((value / 10) % 10) + 0x30);
 172   2      
 173   2              if(points > 1)
 174   2              {
 175   3                  ch[3] = ((value % 10) + 0x30);
 176   3              }
 177   2          }
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2018 12:36:35 PAGE 4   

 178   1      
 179   1          LCD_goto(x_pos, y_pos);
 180   1          LCD_putstr(ch);
 181   1      }
 182          
 183          
 184          void print_F(unsigned char x_pos, unsigned char y_pos, float value, unsigned char points)
 185          {
 186   1          signed long tmp = 0x0000;
 187   1      
 188   1          tmp = value;
 189   1          print_I(x_pos, y_pos, tmp);
 190   1          tmp = ((value - tmp) * 1000);
 191   1      
 192   1          if(tmp < 0)
 193   1          {
 194   2             tmp = -tmp;
 195   2          }
 196   1      
 197   1          if(value < 0)
 198   1          {
 199   2              value = -value;
 200   2              LCD_goto(x_pos, y_pos);
 201   2              LCD_putchar(0x2D);
 202   2          }
 203   1          else
 204   1          {
 205   2              LCD_goto(x_pos, y_pos);
 206   2              LCD_putchar(0x20);
 207   2          }
 208   1      
 209   1          if((value >= 10000) && (value < 100000))
 210   1          {
 211   2              print_D((x_pos + 6), y_pos, tmp, points);
 212   2          }
 213   1          else if((value >= 1000) && (value < 10000))
 214   1          {
 215   2              print_D((x_pos + 5), y_pos, tmp, points);
 216   2          }
 217   1          else if((value >= 100) && (value < 1000))
 218   1          {
 219   2              print_D((x_pos + 4), y_pos, tmp, points);
 220   2          }
 221   1          else if((value >= 10) && (value < 100))
 222   1          {
 223   2              print_D((x_pos + 3), y_pos, tmp, points);
 224   2          }
 225   1          else if(value < 10)
 226   1          {
 227   2              print_D((x_pos + 2), y_pos, tmp, points);
 228   2          }
 229   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1658    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      48
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2018 12:36:35 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
